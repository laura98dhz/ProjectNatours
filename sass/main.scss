/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*
Reseteo de estilos: lo que queremos es q nuestra aplicacion web se vea igual en todos los navegadpres, 
pero los navegadpres tienen estilos por defecto, por lo que hacemos un reseteo de estilos, para ello usamos el 
selector universal que se aplica a todos los elementos de html(*)
*/

* {
    margin: 0; /*si es 0 el valor no se pone el tipo*/
    padding: 0;
    box-sizing: border-box; /*en CSS se cometió un error al diseñarlo, respecto a los tamaños, y es considerar que cuando das un amaño al elemento ese tamaño es para ese elemento, pero si tu luego le pones un border o un padding se añade sobre el tamaño que tu hayas puesto, por lo que si usas esta propiedad el tamaño es el que es y si añades algo a ese elemento se hace sobre ese tamaño no lo añade extra*/
  }
  
  html {
    font-size: 62.5%; /* 10/16 = 0.625. This set allows users to change default font-size*//*se adapta a la fuente que tenga el usuario*/
  }
  
  /*las propiedades que se heredan se ponen conn la etiqueta body y las que no en * */
  body {
    font-family: "Lato", sans-serif; /* font is inherit by child tags. More efficient then use the universal selector */
    font-weight: 400;
    /*font-size: 16px; /* Later we are going to use a better approach */
    line-height: 1.7;
    color: #777;
    padding: 3rem; /* padding is not inherit */
  }
  
  .header {
    height: 95vh; /* 95% viewport height */ /*para que siempre ocupe el 95% de la pagina*/
    background-image: linear-gradient(
      to right bottom, 
      rgba(128, 214, 113, 0.8),
      rgba(39, 180, 133, 0.8)), 
      url('../img/hero.jpg');
    background-size: cover; /*para que ocupe todo el espacio disponible sin deformarla*/
    background-position: top; /* ensure image always stays at the top of the page */
    position: relative;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /*lo que damos son los vertices del polígono*/
    position: relative;
  }
  
  .logo-box {
    position: absolute; /**/
    top: 4rem;
    left: 4rem;
  }
  
  .logo {
    height: 3.5rem;
  }
  
  .text-box {
    position: absolute;
    top: 50%;/*traslada 50% en referencia al padre*/
    left: 50%;
    transform: translate(-50%, -50%); /* traslada el 50% del ancho de si mismo */
    text-align: center; /* main button is a text element. This solution is easier than using text-transform */
  }
  
  .heading-primary {
    color: #fff;
    text-transform: uppercase; /*Para transformar en mayúsculas*/
    backface-visibility: hidden; 
    margin-bottom: 6rem;
  }
  
  .heading-primary-main {
  
    display: block; /* especifica el comportamiento de visualización (el tipo de cuadro de representación) de un elementoinline: uno al lado del otro//block:ocupa toda la línea*/
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;
  
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
  
  }
  
  .heading-primary-sub {
  
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.75rem;
  
    animation: moveInRight 1s ease-out;
  
    /*
    animation-delay: 3s;
    animation-iteration-count: 3;
    */
  
  }
  
  
  @keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }
  
    80% {
     transform: translateX(1rem);   
    }
  
    100% {
        opacity: 1;
        transform: translate(0);
    }
  }
  
  @keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }
  
    80% {
     transform: translateX(-1rem);   
    }
  
    100% {
        opacity: 1;
        transform: translate(0);
    }
  }
  
  .btn:link,.btn:visited {
      font-size: 1.6rem;
      text-transform: uppercase;
      text-decoration: none;
      padding: 1.5rem 4rem;
      display: inline-block;
      border-radius: 10rem;
      transition: all .2s; /*para hacer animaciones */
      position: relative;
  }
  
  .btn:hover { /*cuando el raton esta encima*/
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem  rgba(0,0,0,.2); /* x y blur color */  
  }
  
  .btn:active { /*cuando pulsas el enlace*/
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 2rem rgba(0,0,0,.2);
  }
  
  .btn-white {
      background-color: #fff;
      color: #777;
  }
  
  .btn::after { /*en principio(luego se puede posiscionar donde quieras) aparece despues del elemento al que le has puesto el pseudoelemento*/
    content: "";/*aunque no tengas texto siempre poner content pq sino puede haber comportamientos raros*/
    display: inline-block;
    height: 100%; /* It works because pseudo-elements behave like a child. So is 100% of the botton height  */
    width: 100%; /*de su padre*/
    border-radius: 10rem;
    position: absolute; /* It does not work because it is positioned with respect to the last element with relative position which is header */
    top: 0;
    left: 0;
    z-index: -1; /*para elementos posicionados, por defecto todos los elementos tienen capa 0, si le ponemos-1 quedaria una capa por debajo*/
    transition: all .4s;
  }/*queremos un elemento after que tape a su padre con el mismo tamaño*/
  
  .btn-white::after {
    background-color: #fff;
  } 
  
  @keyframes moveInButton {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }
  
    100% {
        opacity: 1;
        transform: translate(0);
    }
  }
  
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; 
  } 
  .btn-animated {
    animation: moveInButton .5s ease-out .75s; /* the last value is the delay time */
    animation-fill-mode: backwards; /* Apply 0% styles when animation starts */
  }
  
  
  